// Mocks generated by Mockito 5.4.4 from annotations
// in headspace_mobile_engineering/test/unit/helpers/mock_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:headspace_mobile_engineering/core/resources/data_state.dart'
    as _i2;
import 'package:headspace_mobile_engineering/features/daily_news/domain/entities/article.dart'
    as _i5;
import 'package:headspace_mobile_engineering/features/daily_news/domain/usecases/get_article.dart'
    as _i8;
import 'package:headspace_mobile_engineering/features/daily_news/domain/usecases/get_saved_article.dart'
    as _i3;
import 'package:headspace_mobile_engineering/features/daily_news/domain/usecases/remove_article.dart'
    as _i7;
import 'package:headspace_mobile_engineering/features/daily_news/domain/usecases/save_article.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataSet_0<T> extends _i1.SmartFake implements _i2.DataSet<T> {
  _FakeDataSet_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetSavedArticleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetSavedArticleUseCase extends _i1.Mock
    implements _i3.GetSavedArticleUseCase {
  @override
  _i4.Future<List<_i5.ArticleEntity>> call({dynamic params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue:
            _i4.Future<List<_i5.ArticleEntity>>.value(<_i5.ArticleEntity>[]),
        returnValueForMissingStub:
            _i4.Future<List<_i5.ArticleEntity>>.value(<_i5.ArticleEntity>[]),
      ) as _i4.Future<List<_i5.ArticleEntity>>);
}

/// A class which mocks [SaveArticleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveArticleUseCase extends _i1.Mock
    implements _i6.SaveArticleUseCase {
  @override
  _i4.Future<void> call({_i5.ArticleEntity? params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [RemoveArticleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveArticleUseCase extends _i1.Mock
    implements _i7.RemoveArticleUseCase {
  @override
  _i4.Future<void> call({_i5.ArticleEntity? params}) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [GetArticleUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetArticleUseCase extends _i1.Mock implements _i8.GetArticleUseCase {
  @override
  _i4.Future<_i2.DataSet<List<_i5.ArticleEntity>>> call({dynamic params}) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
          {#params: params},
        ),
        returnValue: _i4.Future<_i2.DataSet<List<_i5.ArticleEntity>>>.value(
            _FakeDataSet_0<List<_i5.ArticleEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.DataSet<List<_i5.ArticleEntity>>>.value(
                _FakeDataSet_0<List<_i5.ArticleEntity>>(
          this,
          Invocation.method(
            #call,
            [],
            {#params: params},
          ),
        )),
      ) as _i4.Future<_i2.DataSet<List<_i5.ArticleEntity>>>);
}
